/**
 *
 * @author Gaurab R. Gautam
 */
package boggle;


import static boggle.BoggleDemo.ROW_SIZE;
import static boggle.BoggleDemo.COL_SIZE;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;


public final class BoggleSolutionBoard extends javax.swing.JPanel
{
    private final int cellWidth = 60;
    
    /**
     * Creates new form BoggleBoard
     */
    public BoggleSolutionBoard()
    {
        initComponents();
        createTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        radioButtonPanel = new javax.swing.JPanel();
        jRadioButton5x5 = new javax.swing.JRadioButton();
        jRadioButton4x4 = new javax.swing.JRadioButton();
        jRadioButton3x3 = new javax.swing.JRadioButton();
        tableScrollPane = new javax.swing.JScrollPane();
        
        tablePanel = new javax.swing.JPanel();
        maxpointsLabel = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 204, 204))); // NOI18N
        setMaximumSize(getPreferredSize());
        setMinimumSize(getPreferredSize());
        setPreferredSize(new java.awt.Dimension(328, 380));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(204, 204, 204)));
        mainPanel.setMaximumSize(getPreferredSize());
        mainPanel.setMinimumSize(getPreferredSize());
        mainPanel.setPreferredSize(new java.awt.Dimension(328, 380));

        radioButtonPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Board Size")));
        radioButtonPanel.setPreferredSize(new java.awt.Dimension(295, 46));

        buttonGroup1.add(jRadioButton5x5);
        jRadioButton5x5.setText("5 x 5");
        jRadioButton5x5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5x5ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton4x4);
        jRadioButton4x4.setSelected(true);
        jRadioButton4x4.setText("4 x 4");
        jRadioButton4x4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4x4ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton3x3);
        jRadioButton3x3.setText("3 x 3");
        jRadioButton3x3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3x3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout radioButtonPanelLayout = new javax.swing.GroupLayout(radioButtonPanel);
        radioButtonPanel.setLayout(radioButtonPanelLayout);
        radioButtonPanelLayout.setHorizontalGroup(
            radioButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(radioButtonPanelLayout.createSequentialGroup()
                .addComponent(jRadioButton3x3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton4x4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton5x5)
                .addContainerGap())
        );
        radioButtonPanelLayout.setVerticalGroup(
            radioButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(radioButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jRadioButton3x3)
                .addComponent(jRadioButton4x4)
                .addComponent(jRadioButton5x5))
        );

        tableScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        tableScrollPane.setHorizontalScrollBar(null);
        tableScrollPane.setMaximumSize(getPreferredSize());
        tableScrollPane.setMinimumSize(getPreferredSize());
        tableScrollPane.setPreferredSize(new java.awt.Dimension(302, 302));
        tableScrollPane.setWheelScrollingEnabled(false);

        tablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 204, 204))); // NOI18N
        tablePanel.setMaximumSize(getPreferredSize());
        tablePanel.setMinimumSize(getPreferredSize());
        tablePanel.setPreferredSize(new java.awt.Dimension(302, 302));
        tablePanel.setLayout(new java.awt.BorderLayout());
        tableScrollPane.setViewportView(tablePanel);

        maxpointsLabel.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        maxpointsLabel.setForeground(new java.awt.Color(51, 153, 0));
        maxpointsLabel.setText("Max Points: 0");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(radioButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(maxpointsLabel)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(radioButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addComponent(maxpointsLabel)
                        .addGap(18, 18, 18)))
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    
    private void jRadioButton5x5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton5x5ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton5x5ActionPerformed
        ROW_SIZE = 5;
        COL_SIZE = 5;
        createTable();
        
    }//GEN-LAST:event_jRadioButton5x5ActionPerformed

    private void jRadioButton4x4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton4x4ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton4x4ActionPerformed
        ROW_SIZE = 4;
        COL_SIZE = 4;
        createTable();
    }//GEN-LAST:event_jRadioButton4x4ActionPerformed

    private void jRadioButton3x3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton3x3ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton3x3ActionPerformed
        ROW_SIZE = 3;
        COL_SIZE = 3;
        createTable();
    }//GEN-LAST:event_jRadioButton3x3ActionPerformed

    public void setMaxPointsPossible(int max)
    {
        this.maxpointsLabel.setText("Max Points: " + max);
    }
    
    public void autoselectTableSize() {
        switch (ROW_SIZE) {
            case 3:
                this.jRadioButton3x3.setSelected(true);
                break;
            
            case 4:
                this.jRadioButton4x4.setSelected(true);
                break;
                
            case 5:
                this.jRadioButton5x5.setSelected(true);
                break;
        }
    }
    
    public void createTable() {
        //clearTable();
        autoselectTableSize();
        
        boggleTable = new javax.swing.JTable();
        boggleTable.setRowHeight(this.cellWidth);
        boggleTable.setTableHeader(null); 

        boggleTable.setModel(new DefaultTableModel( 
                new Object[ROW_SIZE][COL_SIZE], 
                COL_SIZE));
        
        boggleTable.setAutoscrolls(false);
        boggleTable.setIntercellSpacing(new java.awt.Dimension(2, 2));
        boggleTable.setRowSelectionAllowed(false);
        boggleTable.setUpdateSelectionOnSort(false);
        boggleTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        boggleTable.setCellSelectionEnabled(false);
        
        
        for (int i = 0; i < COL_SIZE; i++) {
            TableColumn column = this.boggleTable.getColumnModel().getColumn(i);
            column.setCellEditor(new BoggleCellEditor());
            column.setCellRenderer(new BoggleCellRenderer());
            
            column.setMaxWidth(this.cellWidth);
            column.setPreferredWidth(this.cellWidth);  
            
        }
        
        tableScrollPane.setViewportView(boggleTable);
    }
    
    
    private void clearTable()
    {
        if (boggleTable != null) {
            DefaultTableModel model = (DefaultTableModel) this.boggleTable.getModel();

            for (int i = (model.getRowCount() - 1); i >= 0; i--) {
                model.removeRow(i);
            }
        }
    }
    
    public void populateTableFromFileData(char[][] boggle) {
        for (int i = 0; i < ROW_SIZE; i++)
        {
            for (int j = 0; j < COL_SIZE; j++) {
                boggleTable.getModel().setValueAt(String.valueOf(boggle[i][j]), i, j);
            }
        }
    }
    
    public JTable getBoggleTable() {
        return this.boggleTable;
    }
    
    public void setCellBackground(int index,List<Integer> path) {
        int row = index/ROW_SIZE;
        int col = ((index % COL_SIZE) == 0 ? 0 : (index % COL_SIZE));
                    
        BoggleCellRenderer renderer = (BoggleCellRenderer)this.boggleTable.getCellRenderer(row, col);
        renderer.setCellColor(path);
    }
    
    public void repaintTable() {
        for (int i = 0; i < ROW_SIZE; i++) {
            for (int j = 0; j < COL_SIZE; j++) {
                BoggleCellRenderer renderer = (BoggleCellRenderer)this.boggleTable.getCellRenderer(i, j);
                renderer.resetCellColor(i, j);
            }
        }
        
        this.boggleTable.repaint();
    }
    
    public char[][] getUserInput() {
        StringBuilder str = new StringBuilder();
        boolean error = false;
        char[][] boggle = new char[ROW_SIZE][COL_SIZE];
        int count = 0;
        
        for (int i = 0; i < ROW_SIZE; i++)
        {
            for (int j = 0; j < COL_SIZE; j++) {
                String letter = (String)boggleTable.getModel().getValueAt(i, j);
                
                // Cell is still editing and  is not empty
                if ((letter == null) && (boggleTable.getEditorComponent() != null)) {
                    letter = ((BoggleCell)boggleTable.getEditorComponent()).getText();
                }
                
                if ((letter == null) || (letter.isEmpty())) {
                    //System.out.println("[" + i + ", " + j + "] cell empty!");
                    String text = "[" + i + ", " + j + "], ";
                    str.append(text);
                    error = true;
                    boggle[i][j] = '?';
                    
                    if (j == (COL_SIZE - 1)) {
                        count = 0;
                        str.append("\n");
                    }
                     continue;
                }
                
                boggle[i][j] = letter.charAt(0);
                //System.out.println(letter);
            }
        }
        
        if (error)  {
            str.append("cell empty!");
            JOptionPane.showMessageDialog(this, str, "BoggleDemo", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        else {
            return boggle;
        }
    }
    
    private JTable boggleTable;
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton jRadioButton3x3;
    private javax.swing.JRadioButton jRadioButton4x4;
    private javax.swing.JRadioButton jRadioButton5x5;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel maxpointsLabel;
    private javax.swing.JPanel radioButtonPanel;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JScrollPane tableScrollPane;
    // End of variables declaration//GEN-END:variables
}
