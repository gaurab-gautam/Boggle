/**
 *
 * @author Gaurab R. Gautam
 */
package boggle;

import static boggle.BoggleDemo.dictionary;
import java.util.HashMap;
import java.util.Map;



public final class ResultDisplay extends javax.swing.JPanel
{
    /**
     * Creates new form BoggleBoard
     */
    public ResultDisplay()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        resultScrollPane = new javax.swing.JScrollPane();
        resultPanel = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        scoreLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTextArea = new javax.swing.JTextArea();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 204, 204))); // NOI18N
        setMaximumSize(getPreferredSize());
        setMinimumSize(getPreferredSize());
        setPreferredSize(new java.awt.Dimension(328, 380));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(204, 204, 204)));
        mainPanel.setPreferredSize(new java.awt.Dimension(328, 380));

        resultScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        resultScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        resultScrollPane.setHorizontalScrollBar(null);
        resultScrollPane.setPreferredSize(new java.awt.Dimension(302, 302));
        resultScrollPane.setWheelScrollingEnabled(false);

        resultPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 204, 204))); // NOI18N
        resultPanel.setPreferredSize(new java.awt.Dimension(302, 302));
        resultPanel.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(300);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        scoreLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        scoreLabel.setForeground(new java.awt.Color(0, 102, 0));
        scoreLabel.setText("Score: 100");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scoreLabel)
                .addContainerGap(211, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scoreLabel)
                .addContainerGap())
        );

        jSplitPane1.setBottomComponent(jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());

        resultTextArea.setBackground(new java.awt.Color(242, 241, 241));
        resultTextArea.setColumns(20);
        resultTextArea.setFont(new java.awt.Font("Monospaced", 3, 13)); // NOI18N
        resultTextArea.setForeground(new java.awt.Color(0, 51, 255));
        resultTextArea.setRows(5);
        jScrollPane1.setViewportView(resultTextArea);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jSplitPane1.setLeftComponent(jPanel3);

        resultPanel.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        resultScrollPane.setViewportView(resultPanel);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private int getScore(String word)
    {
        int length = word.length();
        
        switch (length)
        {
            case 0:
            case 1:
            case 2:
                return 0;
            
            case 3:
            case 4:
                return 1;
                
            case 5:
                return 2;
                
            case 6:
                return 3;
                
            case 7:
                return 5;
                
            default:    // for world length >= 8
                return 11;
                
        }
    }
    
    public void update(javax.swing.DefaultListModel model)
    {
        for (int i = 0; i < model.size(); i++)
        {
            String word = (String) model.getElementAt(i);
            
            // word not in the dictionary
            if (!dictionary.containsKey(word))
            {
                continue;
            }
            
            this.words.put(word, word);
        }
        
        for (String word : this.words.keySet())
        {
            int score = getScore(word);
            totalScore += score;
            this.resultTextArea.append(word + "(" + score + ")\r\n");
        }
        
        this.scoreLabel.setText("Score: " + String.valueOf(totalScore));
    }
    
    private int totalScore = 0;
    private final Map<String, String> words = new HashMap();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JScrollPane resultScrollPane;
    private javax.swing.JTextArea resultTextArea;
    private javax.swing.JLabel scoreLabel;
    // End of variables declaration//GEN-END:variables
}
